name: Tests

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - beta
          - nightly
        include:
          - rust: nightly
            allow-failure: true
    continue-on-error: ${{ matrix.allow-failure || false }}

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        components: rustfmt, clippy

    - name: Cache cargo dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ matrix.rust }}-${{ hashFiles('**/Cargo.lock') }}

    - name: Check formatting
      run: cargo fmt --all -- --check

    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings

    - name: Build
      run: cargo build --verbose

    - name: Run unit tests
      run: cargo test --verbose

    - name: Run integration tests
      run: cargo test --verbose --test integration_tests

    - name: Run CGI integration tests
      run: cargo test --verbose --test cgi_integration_test

    - name: Test with lambda feature
      run: cargo test --verbose --features lambda

    - name: Test with cloud_run feature
      run: cargo test --verbose --features cloud_run

    - name: Test with cgi feature
      run: cargo test --verbose --features cgi

    - name: Test with all features
      run: cargo test --verbose --all-features

    - name: Build documentation
      run: cargo doc --no-deps --all-features

    - name: Check examples compilation
      run: |
        echo "Building examples..."
        for example_dir in example/*; do
          if [ -d "$example_dir" ] && [ -f "$example_dir/Cargo.toml" ]; then
            echo "Building example: $(basename $example_dir)"
            cd "$example_dir"
            cargo check --all-features
            cargo build --all-features
            cd - > /dev/null
          fi
        done

    - name: Check examples in examples directory
      run: |
        if [ -f "examples/custom_headers.rs" ]; then
          echo "Checking examples directory files..."
          cargo check --examples
          cargo build --examples
        fi

  coverage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@v1
      with:
        toolchain: stable
        components: llvm-tools-preview

    - name: Install cargo-tarpaulin
      run: cargo install cargo-tarpaulin

    - name: Generate code coverage
      run: cargo tarpaulin --verbose --all-features --workspace --timeout 120 --out Xml

    - name: Upload to codecov.io
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true 